services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
    - 2181:2181
    networks:
    - pgw-net
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    ports:
    - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
    - zookeeper
    networks:
    - pgw-net
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payments
    ports:
    - 5432:5432
    networks:
    - pgw-net
  redis:
    image: redis:7
    ports:
    - 6379:6379
    networks:
    - pgw-net
  mongo:
    image: mongo:7
    ports:
    - 27017:27017
    networks:
    - pgw-net
  otel-collector:
    image: otel/opentelemetry-collector:0.104.0
    command:
    - --config=/etc/otel-collector-config.yml
    ports:
    - 4317:4317
    - 9464:9464
    volumes: []
    networks:
    - pgw-net
  prometheus:
    image: prom/prometheus:v2.54.1
    ports:
    - 9090:9090
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
    - pgw-net
  grafana:
    image: grafana/grafana:10.4.6
    ports:
    - 3000:3000
    networks:
    - pgw-net
  api-gateway:
    build:
      context: ../../
      dockerfile: Dockerfile.build
      args:
        SERVICE_PATH: services/api-gateway
    container_name: api-gateway
    ports:
    - 8080:8080
    environment:
      SPRING_PROFILES_ACTIVE: dev
    restart: unless-stopped
    depends_on:
    - postgres
    - kafka
    - redis
    networks:
    - pgw-net
  auth-service:
    build:
      context: ../../
      dockerfile: Dockerfile.build
      args:
        SERVICE_PATH: services/auth-service
    container_name: auth-service
    ports:
    - 8081:8080
    environment:
      SPRING_PROFILES_ACTIVE: dev
    restart: unless-stopped
    depends_on:
    - postgres
    - kafka
    - redis
    networks:
    - pgw-net
  ledger-service:
    build:
      context: ../../
      dockerfile: Dockerfile.build
      args:
        SERVICE_PATH: services/ledger-service
    container_name: ledger-service
    ports:
    - 8082:8080
    environment:
      SPRING_PROFILES_ACTIVE: dev
    restart: unless-stopped
    depends_on:
    - postgres
    - kafka
    networks:
    - pgw-net
  notification-service:
    build:
      context: ../../
      dockerfile: Dockerfile.build
      args:
        SERVICE_PATH: services/notification-service
    container_name: notification-service
    ports:
    - 8083:8080
    environment:
      SPRING_PROFILES_ACTIVE: dev
    restart: unless-stopped
    depends_on:
    - postgres
    - kafka
    - redis
    networks:
    - pgw-net
  payment-service:
    build:
      context: ../../
      dockerfile: Dockerfile.build
      args:
        SERVICE_PATH: services/payment-service
    container_name: payment-service
    ports:
    - 8084:8080
    environment:
      SPRING_PROFILES_ACTIVE: dev
    restart: unless-stopped
    depends_on:
    - postgres
    - kafka
    - redis
    networks:
    - pgw-net
  risk-service:
    build:
      context: ../../
      dockerfile: Dockerfile.build
      args:
        SERVICE_PATH: services/risk-service
    container_name: risk-service
    ports:
    - 8085:8080
    environment:
      SPRING_PROFILES_ACTIVE: dev
    restart: unless-stopped
    depends_on:
    - postgres
    - kafka
    - redis
    networks:
    - pgw-net
  settlement-service:
    build:
      context: ../../
      dockerfile: Dockerfile.build
      args:
        SERVICE_PATH: services/settlement-service
    container_name: settlement-service
    ports:
    - 8086:8080
    environment:
      SPRING_PROFILES_ACTIVE: dev
    restart: unless-stopped
    depends_on:
    - postgres
    - kafka
    networks:
    - pgw-net
networks:
  pgw-net:
    driver: bridge
